% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts_ggplot.R, R/ts_plot.R
\name{ts_ggplot}
\alias{ts_ggplot}
\alias{ts_plot}
\title{Plot Time Series}
\usage{
ts_ggplot(...)

ts_plot(..., title, subtitle, ylab = "", family = getOption("ts_font",
  "sans"))
}
\arguments{
\item{...}{ts-boxable time series, objects of class \code{ts}, \code{xts}, \code{data.frame}, \code{data.table}, or \code{tibble}.}

\item{title}{title (optional)}

\item{subtitle}{subtitle (optional)}

\item{ylab}{ylab (optional)}

\item{family}{font family (optional, can also be set via \code{options})}
}
\description{
\code{ts_plot} is a simple and fast plotting function for ts-boxable time series.
It is meant to be used interactively, with limited customizability.
\code{ts_ggplot} prduces a similar plot, but uses the
\href{http://ggplot2.org/}{ggplot2} graphic system, and can be customized. With
\code{\link[=theme_tsbox]{theme_tsbox()}} and \code{\link[=scale_color_tsbox]{scale_color_tsbox()}}, the output of \code{ts_ggplot} is very
similar to \code{ts_plot}.
}
\details{
Both \code{ts_plot} and \code{ts_ggplot} combine multiple ID dimensions into a single
dimension. To plot mulitple dimensions in different shapes, facets, etc., use
standard ggplot.
}
\examples{
ts_plot(AirPassengers, title = "Airline passengers",
       subtitle = "The classic Box & Jenkins airline data")
ts_plot(total = ldeaths, female = fdeaths, male = mdeaths)

ts_plot(ts_c(sunspot.month, sunspot.year, lynx))
ts_plot(ts_scale(ts_c(airmiles, co2, JohnsonJohnson, discoveries)))
ts_plot(EuStockMarkets)
ts_plot(sunspot.month, sunspot.year, lynx)
ts_plot(ts_scale(ts_c(Nile, nottem, USAccDeaths)))

\dontrun{
ts_ggplot(AirPassengers, title = "Airline passengers",
       subtitle = "The classic Box & Jenkins airline data")
ts_ggplot(total = ldeaths, female = fdeaths, male = mdeaths)

ts_ggplot(ts_c(sunspot.month, sunspot.year, lynx))
ts_ggplot(ts_scale(ts_c(airmiles, co2, JohnsonJohnson, discoveries)))
ts_ggplot(EuStockMarkets)
ts_ggplot(sunspot.month, sunspot.year, lynx)
ts_ggplot(ts_scale(ts_c(Nile, nottem, USAccDeaths)))

library(Quandl)
ts_ggplot(Quandl("FRED/GDPMC1", "xts"), title = "US GDP")

library(dataseries)
dta <- ds(c("GDP.PBRTT.A.R", "CCI.CCIIR"), "xts")

ts_ggplot(ts_scale(ts_window(
  ts_c(
    `GDP Growth` = ts_pc(dta[, 'GDP.PBRTT.A.R']),
    `Consumer Sentiment Index` = dta[, 'CCI.CCIIR']
  ),
  start = "1995-01-01"))) +
  ggplot2::ggtitle("GDP and Consumer Sentiment", subtitle = "normalized values") +
  theme_tsbox() +
  scale_color_tsbox()
}

}
